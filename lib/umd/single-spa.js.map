{"version":3,"file":"single-spa.js","sources":["../../src/applications/app.helpers.js","../../src/applications/app.js","../../src/lifecyles/load.js","../../src/lifecyles/unmount.js","../../src/lifecyles/bootstrap.js","../../src/nav/navigator-event.js","../../src/nav/reroute.js","../../src/start.js"],"sourcesContent":["// 描述应用的整个状态\r\n\r\nexport const NOT_LOADED = 'NOT_LOADED' //应用初是状态\r\nexport const LOADING_SOURCE_CODE = 'LOADING_SOURCE_CODE' //加载资源\r\nexport const NOT_BOOTSTRAPPED = 'NOT_BOOTSTRAPPED' //还没有调用 bootstarp方法\r\nexport const BOOTSTRAPPING = 'BOOTSTRAPPING' //启动中\r\nexport const NOT_MOUNTED = 'NOT_MOUNTED' //还没有调用 mounted\r\nexport const MOUNTING = 'MOUNTING' //正在挂载中\r\nexport const MOUNTED = 'MOUNTED' //挂载完成\r\nexport const UPDATINMG = 'UPDATINMG' //更新中\r\nexport const UNMOUNTED = 'UNMOUNTED' //解除挂载\r\nexport const UNLOADING = 'UNLOADING' //完全卸载中\r\nexport const LOAD_ERR = 'LOAD_ERR' //\r\nexport const SKIP_BECAUSE_BROKEN = 'SKIP_BECAUSE_BROKEN' //\r\n\r\n//当前应用是否被激活\r\nexport function isActive(app){\r\n    return app.status === MOUNTED\r\n}\r\n//当前这个应用是否要被激活\r\nexport function shouldBeActive(app){  // 返回true 就应该开始初始化等一系列操作\r\n    return app.activeWhen(window.location)\r\n}","import {\r\n    BOOTSTRAPPING,\r\n    LOADING_SOURCE_CODE,\r\n    MOUNTED,\r\n    NOT_BOOTSTRAPPED,\r\n    NOT_LOADED,\r\n    NOT_MOUNTED,\r\n    shouldBeActive\r\n} from './app.helpers'\r\nimport { reroute } from \"../nav/reroute\";\r\n/**\r\n * \r\n * @param {} appName 应用名字\r\n * @param {*} loadApp 加载的应用\r\n * @param {*} activeWhen 当激活时会调用 loadApp\r\n * @param {*} customProps 自定义属性\r\n */\r\nconst apps = [] //用来存放所有的应用\r\n//维护应用所有的状态 状态机\r\nexport function registerApplocation(appName, loadApp, activeWhen, customProps) {\r\n    apps.push({ //将应用注册好了\r\n        name: appName,\r\n        loadApp,\r\n        activeWhen,\r\n        customProps,\r\n        status: NOT_LOADED\r\n    })\r\n    console.log(apps)\r\n    reroute();\r\n}\r\n\r\nexport function getAppChanges() {\r\n    const appsToUnmount = [] // 要卸载的app\r\n    const appsToLoad = [] //要加载的app\r\n    const appsToMount = [] //需要挂载的\r\n    apps.forEach(app => {\r\n        const appShouldActive = shouldBeActive(app) //判断是否需要被加载\r\n        switch (app.status) {\r\n            case NOT_LOADED:\r\n            case LOADING_SOURCE_CODE:\r\n                if (appShouldActive) {\r\n                    appsToLoad.push(app)\r\n                }\r\n                break;\r\n            case NOT_BOOTSTRAPPED:\r\n            case BOOTSTRAPPING:\r\n            case NOT_MOUNTED:\r\n                if (appShouldActive) {\r\n                    appsToMount.push(app)\r\n                }\r\n                break;\r\n            case MOUNTED:\r\n                if (!appShouldActive) {\r\n                    appsToUnmount.push(app)\r\n                }\r\n                break;\r\n        }\r\n    })\r\n    return {\r\n        appsToUnmount,\r\n        appsToLoad,\r\n        appsToMount\r\n    }\r\n}","import {\r\n    LOADING_SOURCE_CODE,\r\n    NOT_BOOTSTRAPPED\r\n} from \"../applications/app.helpers\";\r\n\r\n\r\n// function flattenFnArray(fns) {\r\n//     fns = Array.isArray(fns) ? fns : [fns]\r\n//     // Promise.resolve().then(() => fn(props))\r\n//     return props => fns.reduce((p, fn) => p.then(() => fn(props)), Promise.resolve())\r\n// }\r\nfunction flattenFnArray(fns) {\r\n    fns = Array.isArray(fns) ? fns : [fns]; // Promise.resolve().then(() => fn(props))\r\n    return (props) => {\r\n        return fns.reduce(\r\n            // reduce第一个参数是上一个即prev, 这边p是一个异步函数，所以这边要then一下\r\n            (p, fn) => p.then(() => {\r\n                // 执行\r\n                fn(props)\r\n            }),\r\n            // 这个是当前的，也就是指的是当前方法这边resolve就是让任务进行下去的意思\r\n            Promise.resolve()\r\n        );\r\n    };\r\n}\r\nexport async function toLoadPromise(app) {\r\n    console.log(app)\r\n    if (app.loadPromise) {\r\n        return app.loadPromise //缓存机制\r\n    }\r\n    return (app.loadPromise = Promise.resolve().then(async () => {\r\n        app.status = LOADING_SOURCE_CODE\r\n        let {\r\n            bootstarp,\r\n            mount,\r\n            unmount\r\n        } = await app.loadApp(app.customProps)\r\n        app.status = NOT_BOOTSTRAPPED //没有调用 bootstrap方法\r\n        // flattenFnArray  拍平数组函数\r\n        app.bootstarp = flattenFnArray(bootstarp)\r\n        app.mount = flattenFnArray(mount)\r\n        app.unmount = flattenFnArray(unmount)\r\n        delete app.loadPromise\r\n        return app\r\n    }))\r\n\r\n}","import {\r\n    MOUNTED,\r\n    NOT_MOUNTED,\r\n    UNLOADING\r\n} from \"../applications/app.helpers\";\r\nexport async function toUnmountPromise(app) {\r\n    console.log(app)\r\n    if (app.status != MOUNTED) {\r\n        return app\r\n    }\r\n    app.status = UNLOADING\r\n    await app.unmount(app.customProps)\r\n    app.status = NOT_MOUNTED\r\n    return app\r\n}","import {\r\n    BOOTSTRAPPING,\r\n    NOT_BOOTSTRAPPED,\r\n    NOT_MOUNTED\r\n} from \"../applications/app.helpers\";\r\nexport async function toBootstrapPromise(app) {\r\n    if (app.status != NOT_BOOTSTRAPPED) {\r\n        return app\r\n    }\r\n    app.status = BOOTSTRAPPING\r\n\r\n    await app.bootstarp(app.costomProps)\r\n    app.status = NOT_MOUNTED //没有调用 bootstrap方法\r\n    return app\r\n}","// hashchange  popstate\r\nimport {\r\n    reroute\r\n} from './reroute'\r\nexport const routingEventsListeningTo = ['hashchange', 'popstate']\r\n\r\nfunction urlReRoute() { //会根据路径加载不同的应用\r\n    reroute([], arguments)\r\n}\r\n\r\nconst capturedEventListeners = { //后续挂载的事件先暂存起来\r\n    hashchange:[],\r\n    popstate:[]  //当应用切换完成后可以调用\r\n}\r\n//处理应用加载的逻辑在最前面\r\nwindow.addEventListener('hashchange', urlReRoute)\r\n\r\nwindow.addEventListener('popstate', urlReRoute)\r\n\r\nconst originalAddEventListener = window.addEventListener\r\nconst originalRemoveEventListener = window.removeEventListener\r\n\r\n\r\nwindow.addEventListener = function (eventName,fn){\r\n    // console.log(capturedEventListeners.eventName)\r\n    if(routingEventsListeningTo.includes(eventName) && !capturedEventListeners[eventName].some(listener => listener == fn)){\r\n        capturedEventListeners[eventName].push(fn)\r\n        return\r\n    }\r\n    console.log(arguments)\r\n    return originalAddEventListener.apply(this,arguments)\r\n}\r\nwindow.removeEventListener = function (eventName,fn){\r\n    if(routingEventsListeningTo.includes(eventName)){\r\n        capturedEventListeners[eventName] = capturedEventListeners[eventName].filter(l => l == fn)\r\n        return\r\n    }\r\n    return originalRemoveEventListener.apply(this,arguments)\r\n}\r\n\r\n/**\r\n * hash路由  hash变化时可以切换\r\n * 浏览器路由 切换时不会触发 popstate\r\n */\r\n\r\nfunction patchedUpdateState(updateState,methodName){\r\n    return function(){\r\n        const location = window.location.href\r\n        updateState.apply(this,arguments) //调用切换方法\r\n        const afterUrl = window.location.href\r\n        if(location != afterUrl){ \r\n            //路径变了 重写路由 重新加载应用 传入事件源   窗口历史发生变化时发生的事件属于PopStateEvent对象\r\n            urlReRoute(new PopStateEvent('popstate'))\r\n        }\r\n    }\r\n}\r\nwindow.history.pushState = patchedUpdateState(window.history.pushState,'pushState')\r\nwindow.history.replaceState = patchedUpdateState(window.history.replaceState,'replaceState')\r\n//用户可能还会绑定自己的路由事件 vue\r\n\r\n\r\n//当应用切换后 还需要处理原来的方法 需要在应用切换后再执行\r\n","import {\r\n    getAppChanges\r\n} from '../applications/app'\r\nimport {\r\n    started\r\n} from '../start'\r\nimport {\r\n    toLoadPromise\r\n} from '../lifecyles/load'\r\nimport {\r\n    toUnmountPromise\r\n} from '../lifecyles/unmount'\r\nimport {\r\n    toBootstrapPromise\r\n} from '../lifecyles/bootstrap'\r\nimport './navigator-event'\r\nexport function reroute() {\r\n    const {\r\n        appsToLoad,\r\n        appsToMount,\r\n        appsToUnmount\r\n    } = getAppChanges()\r\n    console.log(appsToLoad, appsToMount, appsToUnmount)\r\n    if (started) {\r\n        return perfromAppChanges() //根据路径装载应用\r\n    } else {\r\n        return loadApps() //预加载应用\r\n    }\r\n\r\n    async function loadApps() {\r\n        let apps = await Promise.all(appsToLoad.map(toLoadPromise))\r\n    }\r\n    async function perfromAppChanges() { //根据路径来装载应用\r\n        //先卸载不需要的应用\r\n        //去加载需要的应用\r\n\r\n        let unMountApps = appsToUnmount.map(toUnmountPromise)\r\n        console.log(unMountApps)\r\n        //这个应用可能需要加载 路径不匹配 加载app1的时候 切换到了app2\r\n        appsToLoad.map(async app => { // 将需要加载的应用拿到 => 加载 => 启动 => 挂载\r\n            app = await toLoadPromise(app)\r\n            app = await toBootstrapPromise(app)\r\n            return toUnmountPromise(app)\r\n        })\r\n        appsToMount.map(async app => {\r\n            app = await toBootstrapPromise(app)\r\n            return toUnmountPromise(app)\r\n        })\r\n        // appsToUnmount.map(toUnmountPromise)  \r\n\r\n    }\r\n}\r\n\r\n//以上是用于初始化操作的 我们还需要 当路径切换时重新加载应用\r\n/**\r\n * 重写路由相关的方法\r\n */","import { reroute } from \"./nav/reroute\";\r\n\r\n\r\nexport let started = false\r\nexport function start() {\r\n    // 需要挂载应用\r\n    started = true\r\n    reroute()\r\n}"],"names":[],"mappings":"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"}